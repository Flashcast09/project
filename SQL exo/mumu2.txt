exercice 1 

SELECT * FROM client WHERE prenom = "Muriel"
AND PASSWORD = SHA1("test11") ;

exercice 2

SELECT nom, COUNT(*) AS nbr_items // on sélectionne le nom des produits on les compte et renomme avec un alias "total" 
FROM commande_ligne		  // on recup dans la table associée
GROUP BY nom 			  // on les regroupe par le nom pour éviter les doublons
HAVING nbr_items > 1		  // il faut filtrer les produits avec un nombre de d'items supérieur à 1
ORDER BY nbr_items DESC		  // on les organise


exercice 3

SELECT nom, COUNT(*) AS nbr_items , GROUP_CONCAT(`commande_id`) AS liste_commandes // GO GOOGLE 
FROM commande_ligne
GROUP BY nom 
HAVING nbr_items > 1
ORDER BY nbr_items DESC;


exercice 4

UPDATE commande_ligne SET prix_total = replace(prix_total, '0', 'quantite*prix_unitaire') // pour update une colonne, commencer par UPDATE la table SET le nom de la colonne
WHERE prix_total = quantite*prix_unitaire ;						  // et a l'aide de REPLACE on dit ce que l'on veut remplacer.
											  // le where est nécessaire pour quelque soit la raison


exercice 5

SELECT client.prenom, client.nom, commande.date_achat, commande_id, SUM(prix_total) AS prix_commande // on va chercher les colonnes qui nous intéresse dans les tables
FROM `commande_ligne` 										     // le SUM pirx total reconnait par lui-même les valeurs à additionner 
LEFT JOIN commande ON commande.id = commande_ligne.commande_id
LEFT JOIN client ON client.id = commande.client_id
GROUP BY `commande_id`;


exercice 6

UPDATE commande AS t1 
INNER JOIN 
    ( SELECT commande_id, SUM(commande_ligne.prix_total) AS p_total 
      FROM commande_ligne 
      GROUP BY commande_id ) t2 
          ON  t1.id = t2.commande_id 
SET t1.cache_prix_total = t2.p_total;

exercice 7

SELECT sum(cache_prix_total) as prix_total, MONTH(date_achat) AS MONTH  FROM commande GROUP BY MONTH ; // objet de calcul pour faire le total des prix donner un alias,
													// selectionner aussi le mois  et lui donner un alias et enfin 
													// grouper par mois .

exercice 8

SELECT  client.nom, client.prenom, SUM(commande.cache_prix_total) AS prix_total from commande // On veut le nom et prenom des clients puis calculer la somme de leur commandes
LEFT JOIN client ON client.id = commande.client_id						// respectives ensuite on link la table client et commande grace aux id 
GROUP BY commande.client_id									// puis on les group par l'id du client, on tri du plus grand au plus petit
ORDER BY  prix_total DESC									// et on limite a 10 le nombre de résultats.
LIMIT 10  ;


exercice 9

SELECT sum(cache_prix_total) as prix_total, date(date_achat) AS date  FROM commande GROUP BY date ; // ouah c'était dur regarder exercice 7 .

exercice 11

UPDATE commande 
SET category = '1'
WHERE cache_prix_total < 200 ;

UPDATE commande 
SET category = '2'
WHERE cache_prix_total BETWEEN 200 AND 500 ;

UPDATE commande 
SET category = '3'
WHERE cache_prix_total BETWEEN 500 AND 1000 ;

UPDATE commande 
SET category = '4'
WHERE cache_prix_total > 1000 ; 


